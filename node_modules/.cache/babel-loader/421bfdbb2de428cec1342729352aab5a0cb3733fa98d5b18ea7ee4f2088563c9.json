{"ast":null,"code":"var _jsxFileName = \"/Users/aaryjoshi/Desktop/client/notes-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport { nanoid } from 'nanoid';\nimport Split from \"react-split\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = React.useState([]);\n  const [currentNoteId, setCurrentNoteId] = React.useState(notes[0] && notes[0].id || \"\");\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"As you wish\"\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"split\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XNQssttw6uth+ePmm6cHj+DhxG0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","nanoid","Split","jsxDEV","_jsxDEV","App","_s","notes","setNotes","useState","currentNoteId","setCurrentNoteId","id","createNewNote","newNote","body","prevNotes","children","length","sizes","direction","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/aaryjoshi/Desktop/client/notes-app/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport { nanoid } from 'nanoid';\nimport Split from \"react-split\"\n\nfunction App() {\n  const [notes,setNotes]=React.useState([])\n  const [currentNoteId,setCurrentNoteId]=React.useState(\n    (notes[0] && notes[0].id) || \"\"\n  )\n\n\n  function createNewNote(){\n    const newNote={\n      id:nanoid(),\n      body:\"As you wish\"\n    }\n\n    setNotes(prevNotes=>[newNote,...prevNotes])\n    setCurrentNoteId(newNote.id)\n  }\n\n\n\n  return (\n    <main>\n      {\n        notes.length>1 \n        ?\n        <div\n                sizes={[30, 70]} \n                direction=\"horizontal\" \n                className=\"split\"\n            >\n                {/* <Sidebar\n                    notes={notes}\n                    currentNote={findCurrentNote()}\n                    setCurrentNoteId={setCurrentNoteId}\n                    newNote={createNewNote}\n                />\n                {\n                    currentNoteId && \n                    notes.length > 0 &&\n                    <Editor \n                        currentNote={findCurrentNote()} \n                        updateNote={updateNote} \n                    />\n                } */}\n            </div>\n\n            :\n\n            <div className=\"no-notes\">\n            <h1>You have no notes</h1>\n            <button \n                className=\"first-note\" \n                onClick={createNewNote}\n            >\n                Create one now\n            </button>\n        </div>\n\n      }\n     \n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,KAAK,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACC,aAAa,EAACC,gBAAgB,CAAC,GAACX,KAAK,CAACS,QAAQ,CAClDF,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACK,EAAE,IAAK,EAC/B,CAAC;EAGD,SAASC,aAAaA,CAAA,EAAE;IACtB,MAAMC,OAAO,GAAC;MACZF,EAAE,EAACX,MAAM,CAAC,CAAC;MACXc,IAAI,EAAC;IACP,CAAC;IAEDP,QAAQ,CAACQ,SAAS,IAAE,CAACF,OAAO,EAAC,GAAGE,SAAS,CAAC,CAAC;IAC3CL,gBAAgB,CAACG,OAAO,CAACF,EAAE,CAAC;EAC9B;EAIA,oBACER,OAAA;IAAAa,QAAA,EAEIV,KAAK,CAACW,MAAM,GAAC,CAAC,gBAEdd,OAAA;MACQe,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,CAAE;MAChBC,SAAS,EAAC,YAAY;MACtBC,SAAS,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAgBhB,CAAC,gBAINrB,OAAA;MAAKiB,SAAS,EAAC,UAAU;MAAAJ,QAAA,gBACzBb,OAAA;QAAAa,QAAA,EAAI;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BrB,OAAA;QACIiB,SAAS,EAAC,YAAY;QACtBK,OAAO,EAAEb,aAAc;QAAAI,QAAA,EAC1B;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIJ,CAAC;AAEX;AAACnB,EAAA,CA7DQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA+DZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}